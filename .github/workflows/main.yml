# Deploy the production app

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install backend
        working-directory: backend
        run: |
          npm install

      - name: Build backend
        working-directory: backend
        run: |
          npm run build

      - name: Test backend
        working-directory: backend
        run: |
          npm run test

      - name: Install frontend
        working-directory: frontend
        run: |
          npm install

      - name: Build frontend
        working-directory: frontend
        run: |
          npm run build

      - name: Test frontend
        working-directory: frontend
        run: |
          npm test

      - name: Install CDK
        working-directory: cdk
        run: |
          npm install

      - name: Build CDK
        working-directory: cdk
        run: |
          npm run build

      - name: Test CDK
        working-directory: cdk
        run: |
          npm run test -- test

      - name: Identify test account and region
        working-directory: cdk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          aws sts get-caller-identity
          echo ${AWS_DEFAULT_REGION} | sed 's/-/+/g'

      - name: Deploy the webapp stack to the test account
        working-directory: cdk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npx cdk bootstrap
          STACKNAME=$(npx @cdk-turnkey/stackname@1.2.0 --suffix webapp)
          npx cdk deploy --require-approval never ${STACKNAME}

      - name: Deploy to the frontend bucket (test account)
        working-directory: cdk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          bash scripts/deploy-frontend.sh

      - name: Identify prod account and region
        working-directory: cdk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          aws sts get-caller-identity
          echo ${AWS_DEFAULT_REGION} | sed 's/-/+/g'

      - name: Deploy the webapp stack to the prod account
        working-directory: cdk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npx cdk bootstrap
          STACKNAME=$(npx @cdk-turnkey/stackname@1.2.0 --suffix webapp)
          npx cdk deploy --require-approval never ${STACKNAME}

      - name: Deploy to the frontend bucket (prod account)
        working-directory: cdk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          bash scripts/deploy-frontend.sh
